/***************
 * Header bars *
 ***************/
%titlebar,
headerbar {
  padding: 0px 13px;
  min-height: 34px;
  background: if($variant == 'light', linear-gradient(to bottom, #fff, #fff) , mix($base_color, darken($headerbar_color, 8%), 30%));
  color: $headerbar_fg_color;
  border-radius: 0;
  &:backdrop {
    border-color: $backdrop_borders_color;
   // background-image: none;

    transition: $backdrop_transition;
  }

  .title {
    font-weight: bold;
    padding-left: 12px;
    padding-right: 12px;
  }

  .subtitle {
    font-size: smaller;
    padding-left: 12px;
    padding-right: 12px;

    @extend .dim-label;
  }
 
  entry { min-height: 24px;}  
  
  button {
    @include button(normal-header);
    min-height: 20px;
    margin-top: 5px;
    margin-bottom: 5px;
    padding-top: 4px;
    padding-bottom: 4px;
    box-shadow: none;

    &.suggested-action{
      box-shadow: none;
      border: none;
      background-image: $suggested_bg_color;
        &:disabled, &:disabled:backdrop, &:backdrop {
          border: none;
          background-image: $suggested_bg_color;
          &:hover,
          &:active,
          &:checked {
            border: none;
            background-image: $suggested_bg_color;
          }
        }
        
      }
      
      &.appmenu{
      background: transparent;
      &:backdrop{background: transparent;}
    }
    &:hover,
    &:active,
    &:checked {
      &,&:backdrop{
        @include button(active-header);
      } 
    }

    &:backdrop,
    &:disabled,
    &:backdrop:disabled {
      @include button(backdrop-header,red,transparentize($fg_color,0.8));
      border: none;
    }


    @each $b_type, $b_color in (suggested-action, $lime),
                               (destructive-action, $destructive_color) {
      &.#{$b_type} {
        font-weight: bold;
        min-height: 14px;
        margin-top: 5px;
        margin-bottom: 5px;
        border-radius: 5px;
        @include button(normal, $b_color, white);
        box-shadow: none;

        &:hover { @include button(hover, $b_color, white); }

        &:active { @include button(active, $b_color, white); }

        &:disabled {
          @include button(insensitive, $b_color, white);
          label {color: transparentize(white,0.5);}
        }

        &:backdrop {
          @include button(backdrop, $b_color, white);
          border-radius: 3px;
        }

        &:backdrop:disabled { @include button(backdrop-insensitive, $b_color, white); }

      }
    }

    //Reset style
    &.titlebutton {
      color: transparent;
      box-shadow: none;
      border: none;
      background-color: transparent;
      background-image: none;
      background-repeat: no-repeat;
      padding-top: 0;
      padding-bottom: 0px;
      &:hover,
      &:active,
      &:checked,
      &:backdrop,
      &:backdrop:hover,* {
        color: transparent;
        box-shadow: none;
        background-color: transparent;
      }
    }
  }
  %linked-header {
 // border-radius: 23px;
    border-right-style: none;
    border: none;
    box-shadow: none;
    margin: 5px 0px;
    min-height: 20px;
    &:first-child {
    }

    &:last-child {
    }

    &:only-child {
      //border-radius: 13px;
      border-style: none;
    }
    transition: all .1s ease-in;
  }
  .linked > button {
    @extend %linked-header;
  }
  .linked > button:active{
    @extend %linked-header;
    @include button(active-header);
  }
  .linked > button:checked{
    @extend %linked-header;
    @include button(active-header);
    border-radius: 5px;
    &:backdrop {
      &, label {
        color: if($variant == 'light', darken($base_color, 30%), $fg_color);
      }
    }
  }
  .linked > button:hover,
  .linked > button:backdrop { 
    @extend %linked-header; 
  }
  .linked:not(.vertical) > entry { 
    border-color:$borders_color;
    box-shadow: none;
    background: lighten($base_color, 3%); 
    color: $headerbar_fg_color;
    caret-color: $headerbar_fg_color;
    border-radius: 15px;
    *{ color: $headerbar_fg_color; }
    &:focus {
      border-color: entry_focus_border();
    }
  }
  // End reset style

  &.selection-mode {
    button {

      &:backdrop {
        &.flat, & {
          &:active,
          &:checked {
            //@include button(backdrop-active, $selected_bg_color, $selected_fg_color);
            label{
              color:$backdrop_selected_bg_color;
            }
            border-color: $selected_borders_color;
          }
        }
      }
    }

  }

  .tiled &,
  .maximized & {
    &.titlebar {
      @if $variant == 'light' { box-shadow: none; }
      @else { box-shadow: inset 0 -1px $bottom_highlight; }
    }
    &:backdrop, & { border-radius: 0; }
  } // squared corners when the window is maximized or tiled

  &.default-decoration {
    padding: 5px 4px; 
    min-height: 20px;

    button.titlebutton {
      min-height: 20px;
      min-width: 20px;
      margin: 0;
      padding: 0;
    }
  }
}

headerbar {
  // add vertical margins to common widget on the headerbar to avoid them spanning the whole height
  entry,
  spinbutton,
  separator {
    margin-top: 5px;
    margin-bottom: 5px;
  }
  switch {
    margin-top: 10px;
    margin-bottom: 10px;
  }
  separator { background: transparent; }
}

.background:not(.tiled):not(.maximized) .titlebar {
  @if $variant == 'light' { box-shadow: inset 0 1px $top_highlight; }
  @else { box-shadow: inset 0 1px $top_highlight,inset 0 -1px $bottom_highlight; }


  &:backdrop, & {
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
  }
}

headerbar {
  window:not(.tiled):not(.maximized) separator:first-child + &, // tackles the paned container case
  window:not(.tiled):not(.maximized) &:first-child { &:backdrop, & { border-top-left-radius: 4px; }}

  window:not(.tiled):not(.maximized) &:last-child { &:backdrop, & { border-top-right-radius: 4px; }}
}

.titlebar:not(headerbar) {
  window.csd > & {
    // in csd we assume every titlebar is a headerbar so reset anything, this is needed for split toolbars cases
    padding: 0;
    background-color: transparent;
    background-image: none;
    border-style: none;
    border-color: transparent;
    box-shadow: none;
  }

  > separator {
    background: transparent;
  }

  @extend %titlebar;
}

.titlebar{
  @extend %titlebar;
}